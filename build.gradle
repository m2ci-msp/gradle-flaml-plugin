plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'org.m2ci.msp.praat-wrapper' version '0.6'
    id 'com.gradle.plugin-publish' version '0.9.10'
}

gradlePlugin {
    plugins {
        flamlPlugin {
            id = pluginId
            implementationClass = 'org.m2ci.msp.flaml.FlamlPlugin'
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    compile group: 'de.undercouch', name: 'gradle-download-task', version: '3.4.3'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.21'
    compile group: 'org.m2ci.msp', name: 'jtgt', version: '0.6.1'
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
}

task generateTestResources(type: GenerateTestResources) {
    dependsOn praat
    scriptFile = file('src/test/praat/generateTestResources.praat')
    destDir = layout.buildDirectory.dir('generatedTestResources')
}

processTestResources {
    from generateTestResources, {
        rename { "org/m2ci/msp/flaml/$it" }
    }
}

test {
    useTestNG()
}

pluginBundle {
    website = scmUrl
    vcsUrl = scmUrl
    description = project.description
    tags = ['speech data', 'phonetics']

    plugins {
        flamlPlugin {
            id = pluginId
            displayName = project.description
        }
    }
}

class GenerateTestResources extends DefaultTask {

    @InputFile
    RegularFileProperty scriptFile = project.objects.fileProperty()

    @OutputDirectory
    DirectoryProperty destDir = project.objects.directoryProperty()

    @TaskAction
    void generate() {
        project.exec {
            commandLine project.praat.binary, '--run', scriptFile.get().asFile, destDir.get().asFile
        }
    }
}
