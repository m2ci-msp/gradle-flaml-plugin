plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'org.m2ci.msp.praat-wrapper' version '0.6'
    id 'com.gradle.plugin-publish' version '0.9.10'
}

pluginBundle {
    website = scmUrl
    vcsUrl = scmUrl
    description = project.description
    tags = ['speech data', 'phonetics']

    plugins {
        flamlPlugin {
            id = pluginId
            displayName = project.description
        }
    }
}

gradlePlugin {
    plugins {
        flamlPlugin {
            id = pluginId
            implementationClass = 'org.m2ci.msp.flaml.FlamlPlugin'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'de.undercouch', name: 'gradle-download-task', version: '5.3.0'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.33'
    implementation group: 'io.github.m2ci-msp', name: 'jtgt', version: '0.7.0'
    testImplementation group: 'org.testng', name: 'testng', version: '7.5'
}

task generateTestResources(type: Exec) {
    dependsOn praat
    def scriptFile = objects.fileProperty()
    def destDir = objects.directoryProperty()
    scriptFile.set file('src/test/praat/generateTestResources.praat')
    destDir.set layout.buildDirectory.dir('generatedTestResources')
    inputs.file scriptFile
    outputs.dir destDir
    commandLine praat.binary, '--run', scriptFile.get().asFile, destDir.get().asFile
}

processTestResources {
    from generateTestResources, {
        rename { "org/m2ci/msp/flaml/$it" }
    }
}

test {
    useTestNG()
    systemProperty 'java.io.tmpdir', temporaryDir
    testLogging {
        events 'passed', 'failed', 'skipped'
        exceptionFormat = 'full'
        info {
            showStandardStreams = true
        }
    }
}
